###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.0-alpine as builder

# set work directory
WORKDIR /usr/src/saleor

# set environment variables
ENV PYTHONUNBUFFERED 1 # prevents python from stdout and stderr
ENV PYTHONDONTWRITEBYTECODE 1 # prevents python from writing *.pyc

# install dependencies to build wheels
RUN apk update \
    && apk add libmagic libffi-dev gcc python3-dev musl-dev zlib-dev libxslt-dev libxml2-dev tiff-dev jpeg-dev freetype-dev lcms-dev tcl-dev tk-dev

# lint
RUN pip install --upgrade pip
# RUN pip install flake8



COPY . /usr/src/saleor/
# RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/saleor/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.0-alpine

# create directory for the saleor user
RUN mkdir -p /home/saleor

# create the saleor user
RUN addgroup -S saleor && adduser -S saleor -G saleor

# create the appropriate directories
ENV HOME=/home/saleor
ENV APP_HOME=/home/saleor/container
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/saleor/wheels /wheels
COPY --from=builder /usr/src/saleor/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the saleor user
RUN chown -R saleor:saleor $APP_HOME

# change to the saleor user
USER saleor

# run entrypoint.prod.sh
ENTRYPOINT ["/home/saleor/container/entrypoint.prod.sh"]